#!/bin/bash -ex


    '''
    stowdir = os.path.join(env.LM_DIR, "stow")
    triggersfn = os.path.join(env.LM_DIR, "triggers")
    previdfn = os.path.join(env.LM_DIR, "prev_commit_id")
    # XXX run 'stow -V' first and skip this section if it's not installed 
    sh('stow -d %s -t / --adopt --override=. -vS "%s"' % (
        stowdir, env.LM_VPATH_REV))
    os.path.exists(previdfn) or open(previdfn, 'w').write('HEAD@{40 year ago}\n')
    previd = open(previdfn, 'r').read().strip()
    diffcmd = 'git diff --name-only --diff-filter=AM "%s..HEAD"' % previd
    # bufsize=1 means line buffered
    fns = subprocess.Popen(diffcmd, shell=True, bufsize=1, stdout=PIPE).stdout
    # remove leading stowdir
    fns = map(lambda fn: re.sub("^%s/" % stowdir, "/", fn), fns)
    # uniq
    fns = set(fns)
    for fn in fns.readlines():
        for pat,trig_cmd in XXX
        cat $triggers | while read pat cmd
        do
            if echo "$dst" | egrep "^${pat}$"
            then
                set -x
                $cmd "$dst"
                set +x
            fi
        done
    done
    git rev-parse HEAD > $previdfn
    XXX
    '''

topdir=$1
shift

stowdir=$topdir/stow
triggers=$topdir/triggers
previdfn=$topdir/stamps/prev_commit_id

stow -d $stowdir -t / --adopt --override=. -vS "$@"
[ -f "$previdfn" ] || echo 'HEAD@{40 year ago}' > $previdfn
previd=$(cat $previdfn)
git diff --name-only --diff-filter=AM "${previd}..HEAD" \
    | perl -pne 's|.*?/|/|' | sort -u  \
    | while read dst
do
    cat $triggers | while read pat cmd
    do
        if echo "$dst" | egrep "^${pat}$"
        then
            set -x
            $cmd "$dst"
            set +x
        fi
    done
done
git rev-parse HEAD > $previdfn
